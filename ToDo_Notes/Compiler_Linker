
## Complier & Linker
* Linking involves packaging together all of the .obj files built from your source files, as well as any .lib files you reference, into your output (eg .exe or .dll).
* Without incremental linking, this has to be done from scratch each time.
* Incremental linking links your exe/dll in a way which makes it easier for the linker to update the existing exe/dll when you make a small change and re-compile.
* So, incremental linking just makes it faster to compile and link your project.
* The only runtime effect it might have is that it may make your exe/dll slightly bigger and slower, as decribed here:
http://msdn.microsoft.com/en-us/library/4khtbfyf.aspx
* You may want to use incremental linking for debug builds to speed development, but disable it for release builds to improve runtime performance.



Input Libraries:

/NODEFAULTLIB:msvcrtd.lib;      // For avoid warning after using GLFW_GLEW
              warning LNK4098: defaultlib 'msvcrtd.lib' conflicts with use of other libs; use /NODEFAULTLIB:library

opencv_world341.lib;            // OpenCV Image Process
glew32.lib;                     // OpenGL function extension Wrangller
glfw3.lib;                      // UI window creation
opengl32.lib;                   // Basic OpenGL requirement





9>  MSVCRT.lib(initializers.obj) : warning LNK4098: defaultlib 'msvcrtd.lib' conflicts with use of other libs; use /NODEFAULTLIB:library
